#Maintained by: RehabMan for: Laptop Patches
#battery_HP-Envy-14.txt

# works for:
#  HP Envy 14-u0003tx

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }\n
end;

# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

# deal with buffer fields above
into device label EC0 code_regex (SMD0,)\s+(256) replace_matched begin BDNX,%2,//%1%2 end;
into device label EC0 code_regex (FLD0,)\s+(64) replace_matched begin BDNY,%2 //%1%2 end;
into device label EC0 code_regex (FLD1,)\s+(128) replace_matched begin BCTX,%2 //%1%2 end;
into device label EC0 code_regex (FLD2,)\s+(192) replace_matched begin BCTY,%2 //%1%2 end;
into device label EC0 code_regex (FLD3,)\s+(256) replace_matched begin BCTZ,%2 //%1%2 end;

into method label SMWR code_regex Store\s\(Arg3,\sSMD0\) replaceall_matched begin WECB(0x04,265,Arg3) end;
into method label SMRD code_regex \(FLD0, replaceall_matched begin (RECB(0x04,64), end;
into method label SMRD code_regex \(FLD1, replaceall_matched begin (RECB(0x04,128), end;
into method label SMRD code_regex \(FLD2, replaceall_matched begin (RECB(0x04,192), end;
into method label SMRD code_regex \(FLD3, replaceall_matched begin (RECB(0x04,256), end;

# 16-bit registers
into device label EC0 code_regex BADC,\s+16 replace_matched begin DC00,8,DC01,8 end;
into device label EC0 code_regex BFCC,\s+16 replace_matched begin DC10,8,DC11,8 end;
into device label EC0 code_regex MCUR,\s+16 replace_matched begin FC00,8,FC01,8 end;
into device label EC0 code_regex MBRM,\s+16 replace_matched begin FC10,8,FC11,8 end;
into device label EC0 code_regex MBCV,\s+16 replace_matched begin DV00,8,DV01,8 end;
into device label EC0 code_regex SMW0,\s+16 replace_matched begin DV10,8,DV11,8 end;

# fix 16-bit methods
into method label UPBI code_regex \(BADC, replaceall_matched begin (B1B2(DC00,DC01), end;
into method label UPBI code_regex \(BFCC, replaceall_matched begin (B1B2(DC10,DC11), end;
into method label GBIF code_regex \(BFCC, replaceall_matched begin (B1B2(DC10,DC11), end;
into method label GBCO code_regex \(MCUR, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label UPBS code_regex \(MCUR, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label CLRI code_regex \(MBRM, replaceall_matched begin (B1B2(FC10,FC11), end;
into method label UPBS code_regex \(MBRM, replaceall_matched begin (B1B2(FC10,FC11), end;
into method label UPBS code_regex \(MBCV, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label SMRD code_regex \(SMW0, replaceall_matched begin (B1B2(DV10,DV11), end;

into method label SMWR code_regex Store\s\(Arg3,\sSMW0\) replaceall_matched begin Store(ShiftRight(Arg3,8), DV11)\nStore(Arg3, DV10) end;

into method label UPBI code_regex \(\^\^PCI0\.LPCB\.EC0\.BADC, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.DC00,^^PCI0.LPCB.EC0.DC01), end;
into method label UPBI code_regex \(\^\^PCI0\.LPCB\.EC0\.BFCC, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.DC10,^^PCI0.LPCB.EC0.DC11), end;
into method label GBIF code_regex \(\^\^PCI0\.LPCB\.EC0\.BFCC, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.DC10,^^PCI0.LPCB.EC0.DC11), end;
into method label UPBS code_regex \(\^\^PCI0\.LPCB\.EC0\.MCUR, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.FC00,^^PCI0.LPCB.EC0.FC01), end;
into method label GBCO code_regex \(\^\^PCI0\.LPCB\.EC0\.MCUR, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.FC00,^^PCI0.LPCB.EC0.FC01), end;
into method label UPBS code_regex \(\^\^PCI0\.LPCB\.EC0\.MBRM, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.FC10,^^PCI0.LPCB.EC0.FC11), end;

into method label UPBS code_regex \(\^\^PCI0\.LPCB\.EC0\.MBCV, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.DV00,^^PCI0.LPCB.EC0.DV01), end;

into method label CLRI code_regex \(\^\^LPCB\.EC0\.MBRM, replaceall_matched begin (B1B2(^^LPCB.EC0.FC10,^^LPCB.EC0.FC11), end;


# disable BAT1 device
# into method label _STA parent_label BAT1 replace_content begin Return (Zero) end;
